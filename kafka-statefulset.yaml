apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: kafka-app
  name: kafka-app
  namespace: avc
spec:
  serviceName: kafka-app
  replicas: 2
  selector:
    matchLabels:
      io.kompose.service: kafka-app
  template:
    metadata:
      labels:
        io.kompose.service: kafka-app
      namespace: avc
    spec:
      containers:
        - env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: EXTERNAL
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: EXTERNAL:PLAINTEXT
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "2"
            - name: KAFKA_NUM_PARTITIONS
              value: "2"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper.avc:2181
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "false"
          image: confluentinc/cp-kafka:latest
          command: ["sh","-c"]
          args:
            - '((sleep 40 && kafka-topics --if-not-exists --zookeeper ${KAFKA_ZOOKEEPER_CONNECT} --create --replication-factor 1 --partitions 2 --topic document_added)&) && KAFKA_ADVERTISED_LISTENERS="EXTERNAL://${POD_NAME}.kafka-app.avc.svc.cluster.local:9093" && echo ${KAFKA_ADVERTISED_LISTENERS} && /etc/confluent/docker/run'
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - 'kafka-topics --zookeeper ${KAFKA_ZOOKEEPER_CONNECT} --topic document_added --describe'
            initialDelaySeconds: 70
            failureThreshold: 5
            timeoutSeconds: 30
          readinessProbe:
            tcpSocket:
              port: 9093
            timeoutSeconds: 5
            periodSeconds: 5
            initialDelaySeconds: 70
          name: kafka-app
          ports:
            - containerPort: 9093
              hostPort: 9093
              protocol: TCP
              name: "kafka-9093"
          volumeMounts:
            - mountPath: /var/lib/kafka/data
              name: data
      hostname: kafka-app
      restartPolicy: Always
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
